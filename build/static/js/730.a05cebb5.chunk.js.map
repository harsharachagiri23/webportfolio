{"version":3,"file":"static/js/730.a05cebb5.chunk.js","mappings":"gNASA,MAoBA,EApBwCA,EAAGC,OAAMC,OAAMC,eAGnDC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIL,EAAKM,UACbH,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CACHC,UAAU,SACVC,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BC,QAAS,CAAEF,KAAO,MAAOC,GAAK,QAC9BE,GAAI,CAACH,KAAO,MAAOI,GAAK,MAAOC,GAAK,QACpCC,GAAI,CACFC,UAAWf,GAAY,aACvBgB,YAAahB,GAAY,MACzBI,SAEDL,M,uBCfT,MAyFA,EAzFyBkB,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACjB,EAAAA,EAAI,CACHkB,EAAG,OACHC,GAAI,OACJC,EAAG,CACDjB,KAAM,MACNC,GAAI,MACJG,GAAI,QACJC,GAAI,QACJa,GAAI,SACJ,MAAO,UAETC,YAAY,QACZC,eAAgB,gBAAgBxB,SAAA,EAEhCkB,EAAAA,EAAAA,MAACjB,EAAAA,EAAI,CACHwB,QAAS,OACTD,eAAgB,CACdpB,KAAM,aACNI,GAAI,UAENkB,WAAY,SACZC,MAAM,iBACNN,EAAG,cACHO,OAAQ,UAAU5B,SAAA,EAElBkB,EAAAA,EAAAA,MAACW,EAAAA,GAAG,CACF1B,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BL,SAAA,CACD,IACM,QAEPkB,EAAAA,EAAAA,MAACW,EAAAA,GAAG,CACFC,QAASA,KACPhB,EAAS,IAAI,EAEfX,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BH,UAAU,QAAOF,SAAA,CAEA,IAAE,QAIrBkB,EAAAA,EAAAA,MAACW,EAAAA,GAAG,CACF1B,SAAU,CAAEC,KAAM,OAAQC,GAAI,QAC9BL,SAAA,CAEC,IAAI,YAKTH,EAAAA,EAAAA,KAACI,EAAAA,EAQC,CACAyB,WAAY,SACZF,eAAgB,WAChBH,EAAG,MAAMrB,SAER+B,EAAAA,GAAeC,KAAKC,IACnBC,QAAQC,IAAI,YAAaF,EAAKvC,MAE5BuC,EAAKG,SACHvC,EAAAA,EAAAA,KAACJ,EAAO,CACNG,SAAUoB,EAASqB,WAAaJ,EAAKvC,KACrC0C,OAAQH,EAAKG,OACb1C,KAAMuC,EAAKvC,KAEXC,KAAMsC,EAAKtC,KACX2C,GAAIL,EAAKK,IAFJL,EAAKK,WAQf,C,mEC/BErC,GAAOsC,EAAAA,EAAAA,IAA6B,SAAcC,EAAOC,GACpE,MAAM,UAAEC,EAAA,MAAWC,EAAA,QAAOC,EAAA,KAASC,EAAA,MAAMC,EAAA,KAAOC,EAAA,OAAMC,KAAWC,GAC/DT,EAEIU,EAAS,CACbzB,QAAS,OACT0B,cAAeT,EACfhB,WAAYiB,EACZnB,eAAgBoB,EAChBQ,SAAUP,EACVQ,UAAWP,EACXQ,SAAUP,EACVQ,WAAYP,GAGd,OAAOQ,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAP,CAAWjB,MAAUkB,MAAOT,KAAYD,GAClD,IAEAhD,EAAK2D,YAAc,M","sources":["components/NAV_SWITCH/NSwitch.tsx","components/NAVBAR/Navbar.tsx","../node_modules/@chakra-ui/layout/src/flex.tsx"],"sourcesContent":["import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport \"./this.css\";\nimport { Link } from \"react-router-dom\"\n\ninterface NSwitchProps {\n  name: string, id: string, path: string, active: Boolean, isActive: Boolean\n}\n\nconst NSwitch: React.FC<NSwitchProps> = ({ path, name, isActive }) => {\n\n  return (\n    <Link to={path}>\n      <Flex\n        className=\"switch\"\n        fontSize={{ base: \"10px\", sm: \"15px\" }}\n        padding={{ base : \"5px\", sm : \"10px\"}}\n        ml={{base : \"3px\", md : \"3px\", lg : \"10px\"}}\n        sx={{\n          transform: isActive && \"scale(1.1)\",\n          transistion: isActive && \"5s\"\n        }}\n      >\n        {name}\n      </Flex>\n    </Link >\n  );\n};\n\nexport default NSwitch;\n","import { Box, Flex } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./navbar.css\";\nimport NSwitch from \"../NAV_SWITCH/NSwitch\";\n// import { Fade } from \"react-reveal\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { pathNavigation } from \"../../portfolio\";\n\nconst Navbar: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  // if(location.pathname === \"/\") return <></> for future porpose\n  return (\n    <Flex\n      m={\"auto\"}\n      mt={\"20px\"}\n      w={{\n        base: \"90%\",\n        sm: \"90%\",\n        md: \"800px\",\n        lg: \"900px\",\n        xl: \"1100px\",\n        \"2xl\": \"1400px\",\n      }}\n      borderColor=\"black\"\n      justifyContent={\"space-between\"}\n    >\n      <Flex\n        display={\"flex\"}\n        justifyContent={{\n          base: \"flex-start\",\n          md: \"center\",\n        }}\n        alignItems={\"center\"}\n        color=\"thistheme.text\"\n        w={\"fit-content\"}\n        cursor={\"pointer\"}\n      >\n        <Box\n          fontSize={{ base: \"13px\", sm: \"25px\" }}\n          // className=\"entity\"\n        >\n          &lt;{\" \"}\n        </Box>\n        <Box\n          onClick={() => {\n            navigate(\"/\");\n          }}\n          fontSize={{ base: \"13px\", sm: \"54px\" }}\n          className=\"mercy\"\n        >\n          {/* Codding / */} {\" \"}\n          {/* <Image src={\"./images/codingIsLife.png\"} /> */}\n        </Box>\n\n        <Box\n          fontSize={{ base: \"13px\", sm: \"25px\" }}\n          // className=\"entity\"\n        >\n          {\" \"}\n          /&gt;\n        </Box>\n      </Flex>\n\n      <Flex\n        // id=\"hello\"\n        // display={{\n        //   base: \"none\",\n        //   sm: \"flex\",\n        //   md: \"flex\",\n        //   lg: \"flex\",\n        //   xl: \"flex\",\n        // }}\n        alignItems={\"center\"}\n        justifyContent={\"flex-end\"}\n        w={\"70%\"}\n      >\n        {pathNavigation.map((item) => {\n          console.log(\"item.path\", item.path);\n          return (\n            item.active && (\n              <NSwitch\n                isActive={location.pathname === item.path}\n                active={item.active}\n                path={item.path}\n                key={item.id}\n                name={item.name}\n                id={item.id}\n              />\n            )\n          );\n        })}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n"],"names":["NSwitch","path","name","isActive","_jsx","Link","to","children","Flex","className","fontSize","base","sm","padding","ml","md","lg","sx","transform","transistion","Navbar","navigate","useNavigate","location","useLocation","_jsxs","m","mt","w","xl","borderColor","justifyContent","display","alignItems","color","cursor","Box","onClick","pathNavigation","map","item","console","log","active","pathname","id","forwardRef","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","flexDirection","flexWrap","flexBasis","flexGrow","flexShrink","jsx","chakra","div","__css","displayName"],"sourceRoot":""}